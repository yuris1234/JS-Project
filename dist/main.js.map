{"version":3,"file":"main.js","mappings":"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","sources":["webpack://js-project/./src/scripts/bucket.js","webpack://js-project/./src/scripts/note.js","webpack://js-project/./src/scripts/game.js","webpack://js-project/./src/index.js"],"sourcesContent":["class Bucket {\n    constructor(width, height, ctx) {\n        this.canvasWidth = width;\n        this.canvasHeight = height;\n        this.pos = this.canvasWidth/2; \n        this.velocity = 0;\n        this.keys = {\n            right: {\n                pressed: false\n            },\n            left: {\n                pressed: false\n            }\n        }\n        this.ctx = ctx;\n\n        let boundArrowKeyDown = this.handleArrowKeyDown.bind(this);\n        let boundArrowKeyUp = this.handleArrowKeyUp.bind(this);\n        document.addEventListener(\"keydown\", (e) => {\n            boundArrowKeyDown(e);\n        })\n        document.addEventListener(\"keyup\", (e) => {\n            boundArrowKeyUp(e);\n        })\n    }\n\n    draw() {\n        let img = new Image();\n        img.src = \"src/scripts/half-sphere.png\";\n        // this.img.onload = this.loading_complete.bind(this);\n        // debugger\n        img.onload = () => {\n            // debugger\n            this.ctx.fillStyle = 'white';\n            this.ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\n            this.ctx.drawImage(img, this.pos, 0,this.canvasHeight-100, 100, 100);\n        }\n    }\n\n    update() {\n        this.draw();\n        this.velocity = 0;\n        if (this.keys.right.pressed) this.velocity = 3;\n        else if (this.keys.left.pressed) this.velocity = -3;\n        this.pos += this.velocity;\n    }\n\n    handleArrowKeyDown(e) {\n        switch (e.key) {\n            case \"ArrowRight\":\n                this.keys.right.pressed = true;\n                break;\n            case \"ArrowLeft\":\n                this.keys.left.pressed = true;\n                break;\n        }\n    }\n\n    handleArrowKeyUp(e) {\n        switch (e.key) {\n            case \"ArrowRight\":\n                this.keys.right.pressed = false;\n                break;\n            case \"ArrowLeft\":\n                this.keys.left.pressed = false;\n                break;\n        }\n    }\n\n}\nexport default Bucket;","class Note {\n    constructor(canvas, ctx) {\n        this.velocity = Math.random(0.5, 2);\n        // debugger\n        this.pos = {\n            x: this.getRandomInt(100, canvas.width),\n            y: 0\n        };\n        // debugger\n        this.ctx = ctx;\n        this.canvas = canvas;\n    }\n\n    draw() {\n        this.ctx.fillStyle = 'black';\n        this.ctx.fillRect(this.pos.x, this.pos.y, 10, 10);\n    }\n\n    update() {\n        this.draw();\n        this.pos.y += this.velocity;\n    }\n\n    getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive\n      }\n\n}\nexport default Note;","import Bucket from \"./bucket\";\nimport Note from \"./note\";\n\nclass Game {\n    constructor(canvas, ctx) {\n        // debugger\n        this.bucket = new Bucket(canvas.width, canvas.height, ctx);\n        this.notes = [];\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.newNotes();\n        this.animate();\n    }\n\n    run() {\n        this.animate();\n    }\n\n    newNotes() {\n        for (let i = 0; i < 10; i++) {\n            // debugger\n            let newNote = new Note(this.canvas, this.ctx);\n            this.notes.push(newNote);\n        }\n        // debugger\n    }\n\n    animate() {\n        this.bucket.update();\n        this.notes.forEach((ele) => {\n            ele.update();\n        })\n    \n        let boundAnimate = this.animate.bind(this);\n        window.requestAnimationFrame(boundAnimate);\n    }\n}\nexport default Game;","// import Example from \"./scripts/example\";\nimport Bucket from \"./scripts/bucket.js\";\nimport Game from \"./scripts/game.js\";\n// const audioContext = new audioContext();\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const canvas = document.getElementById('game-canvas');\n    const ctx = canvas.getContext('2d');\n    canvas.width = (window.innerWidth);\n    canvas.height = (window.innerHeight);\n\n    let game = new Game(canvas, ctx);\n    game.run();\n})"],"names":["constructor","width","height","ctx","this","canvasWidth","canvasHeight","pos","velocity","keys","right","pressed","left","boundArrowKeyDown","handleArrowKeyDown","bind","boundArrowKeyUp","handleArrowKeyUp","document","addEventListener","e","draw","img","Image","src","onload","fillStyle","fillRect","drawImage","update","key","canvas","Math","random","x","getRandomInt","y","min","max","ceil","floor","bucket","Bucket","notes","newNotes","animate","run","i","newNote","Note","push","forEach","ele","boundAnimate","window","requestAnimationFrame","getElementById","getContext","innerWidth","innerHeight","Game"],"sourceRoot":""}