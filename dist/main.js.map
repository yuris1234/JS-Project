{"version":3,"file":"main.js","mappings":"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","sources":["webpack://js-project/./src/scripts/bucket.js","webpack://js-project/./src/scripts/note.js","webpack://js-project/./src/scripts/musicNoteSequence.js","webpack://js-project/./src/scripts/game.js","webpack://js-project/./src/index.js"],"sourcesContent":["class Bucket {\n    constructor(canvas, ctx) {\n        this.canvas = canvas;\n        this.pos = canvas.width/2; \n        this.velocity = 0;\n        this.keys = {\n            right: {\n                pressed: false\n            },\n            left: {\n                pressed: false\n            }\n        }\n        this.ctx = ctx;\n        let boundArrowKeyDown = this.handleArrowKeyDown.bind(this);\n        let boundArrowKeyUp = this.handleArrowKeyUp.bind(this);\n        document.addEventListener(\"keydown\", (e) => {\n            boundArrowKeyDown(e);\n        })\n        document.addEventListener(\"keyup\", (e) => {\n            boundArrowKeyUp(e);\n        })\n    }\n\n    draw() {\n        let img = new Image();\n        img.src = \"src/media/book.png\";\n        img.onload = () => {\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n            this.ctx.drawImage(img, this.pos, this.canvas.height-75, 75, 75);\n        }\n    }\n\n    update() {\n        this.draw();\n        this.velocity = 0;\n        if (this.keys.right.pressed && this.pos <= this.canvas.width-100) this.velocity = 3;\n        else if (this.keys.left.pressed && this.pos >= 0) this.velocity = -3;\n        this.pos += this.velocity;\n    }\n\n    handleArrowKeyDown(e) {\n        switch (e.key) {\n            case \"ArrowRight\":\n                this.keys.right.pressed = true;\n                break;\n            case \"ArrowLeft\":\n                this.keys.left.pressed = true;\n                break;\n        }\n    }\n\n    handleArrowKeyUp(e) {\n        switch (e.key) {\n            case \"ArrowRight\":\n                this.keys.right.pressed = false;\n                break;\n            case \"ArrowLeft\":\n                this.keys.left.pressed = false;\n                break;\n        }\n    }\n\n}\nexport default Bucket;","class Note {\n    constructor(canvas, ctx, audioCtx) {\n        this.velocity = this.getRandomArbitrary(1, 3);\n        this.pos = {\n            x: this.getRandomArbitrary(10, canvas.width-10),\n            y: 0\n        };\n        this.audioCtx = audioCtx\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.appear = true;\n        this.collision = false;\n        this.alpha = this.getRandomAlpha();\n        this.createGain();\n        this.sound = this.createAudio();\n    }\n\n    createGain() {\n        const volumeSlider = document.querySelector(\"input[name='volume']\");\n        this.gainNode = this.audioCtx.createGain();\n        this.gainNode.connect(this.audioCtx.destination);\n        this.gainNode.gain.value = volumeSlider.value;\n        volumeSlider.addEventListener(\"change\", (e) => {\n            this.gainNode.gain.value = volumeSlider.value;\n        }, false);\n    }\n\n    updateGain() {\n        const volumeSlider = document.querySelector(\"input[name='volume']\");\n        this.gainNode.gain.value = volumeSlider.value;\n    }\n\n    createAudio() {\n        const sound = new Audio();\n        sound.crossOrigin = \"anonymous\";\n        switch (this.alpha) {\n            case \"A\": \n                sound.src = \"src/media/a.mp3\";\n                break;\n            case \"B\":\n                sound.src = \"src/media/b.mp3\";\n                break;\n            case \"C\":\n                sound.src = \"src/media/c.mp3\";\n                break;\n            case \"D\":\n                sound.src = \"src/media/d.mp3\";\n                break;\n            case \"E\":\n                sound.src = \"src/media/e.mp3\";\n                break;\n            case \"F\":\n                sound.src = \"src/media/f.mp3\";\n                break;\n            case \"G\":\n                sound.src = \"src/media/g.mp3\";\n                break;\n        }\n        const source = this.audioCtx.createMediaElementSource(sound);\n        source.connect(this.gainNode);\n        return sound;\n    }\n\n    draw() {\n        let img = new Image();\n        img.src = \"src/media/music_note.png\";\n        img.onload = () => {\n            this.ctx.fillStyle = 'black';\n            this.ctx.font = \"20px serif\";\n            this.ctx.drawImage(img, this.pos.x, this.pos.y, 50, 50);\n            this.ctx.fillText(this.alpha,this.pos.x+20, this.pos.y);\n        };\n    }\n\n    update() {\n        this.checkOutOfBounds();\n        if (this.appear) {\n            this.draw();\n            this.pos.y += this.velocity;\n        }\n    }\n\n    checkOutOfBounds() { \n        if (this.pos.y >= this.canvas.height-50) {\n            this.appear = false;\n        }\n    }\n\n    checkCollision(bucket) {\n        if (\n            this.pos.x <= bucket.pos + 37.5 &&\n            this.pos.y >= this.canvas.height - 75 &&\n            this.pos.x >= bucket.pos - 37.5\n        ) {\n            this.collision = true;\n            this.appear = false;\n        }\n        return this.collision;\n    }\n\n    playTone() {\n        this.updateGain();\n        this.sound.play();  \n    }\n\n    getRandomArbitrary(min, max) {\n        return Math.random() * (max - min) + min;\n    }\n\n    getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min) + min);\n    }\n\n    getRandomAlpha() {\n        let alpha = ['A','B','C','D','E','F','G'];\n        let num = this.getRandomInt(0,7);\n        return alpha[num];\n    }\n\n}\nexport default Note;","class musicNoteSequence {\n    constructor(sequenceCanvas, sequenceCtx) {\n        this.canvas = sequenceCanvas;\n        this.ctx = sequenceCtx;\n        this.sequence = [];\n    }\n\n    draw() {\n        let img = new Image();\n        img.src = \"src/media/music_note.png\";\n        img.onload = () => {\n            this.sequence.forEach((note) => {\n                this.ctx.fillStyle = \"black\";\n                this.ctx.font = \"20px serif\";\n                this.ctx.drawImage(img, this.pos, 10, 50, 50);\n                this.ctx.fillText(note.alpha, this.pos+10, 20);\n                this.pos += this.canvas.width/10;\n            })\n        }\n    }\n\n    update(note) {\n        this.sequence.push(note);\n        this.pos = 10;\n        this.draw();\n    }\n\n    play() {\n        let i = 1;\n        this.sequence.forEach((note) => {\n            setTimeout(() => {\n                note.playTone();\n            },(i++)*500);\n        })\n    }\n\n    reset() { \n        this.sequence = [];\n        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    }\n}\n\nexport default musicNoteSequence;","import Bucket from \"./bucket\";\nimport Note from \"./note\";\nimport musicNoteSequence from \"./musicNoteSequence\";\n\nclass Game {\n    constructor(gameCanvas, gameCtx, audioCtx, sequenceCanvas, sequenceCtx) {\n        this.bucket = new Bucket(gameCanvas, gameCtx);\n        this.collectedNotes = [];\n        this.ctx = gameCtx;\n        this.audioCtx = audioCtx;\n        this.canvas = gameCanvas;\n        this.sequence = new musicNoteSequence(sequenceCanvas, sequenceCtx);\n        this.newNotes();\n        this.animate();\n    }\n\n    run() {\n        this.newNotes();\n        this.sequence.reset();\n        this.animate();\n    }\n\n    newNotes() {\n        this.notes = [];\n        for (let i = 0; i < 10; i++) {\n            let newNote = new Note(this.canvas, this.ctx, this.audioCtx);\n            this.notes.push(newNote);\n        }\n    }\n\n    animate() {\n        if (this.sequence.sequence.length < 10) {\n            this.bucket.update();\n\n            let notesHolder = [];\n            this.notes.forEach((note) => {\n\n                if (note.checkCollision(this.bucket)) {\n                    note.playTone();\n                    this.sequence.update(note);\n                }\n\n                if (note.appear) {\n                    notesHolder.push(note);\n                }\n\n                note.update();\n            })\n        \n            this.notes = notesHolder;\n\n            while (this.notes.length < 10) {\n                let newNote = new Note(this.canvas, this.ctx, this.audioCtx);\n                this.notes.push(newNote);\n            } \n        \n\n            let boundAnimate = this.animate.bind(this);\n            this.requestId = window.requestAnimationFrame(boundAnimate);\n        } else {\n            this.sequence.play();\n        }\n    }\n}\nexport default Game;","import Game from \"./scripts/game.js\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const gameCanvas = document.getElementById('game-canvas');\n    const gameCtx = gameCanvas.getContext('2d');\n    gameCanvas.width = (window.innerWidth - window.innerWidth/2.5);\n    gameCanvas.height = (window.innerHeight - window.innerHeight/4);\n\n    const sequenceCanvas = document.getElementById('sequence-canvas');\n    const sequenceCtx = sequenceCanvas.getContext('2d');\n    sequenceCanvas.width = (window.innerWidth/2 - 100);\n    sequenceCanvas.height = (window.innerHeight/12);\n\n    gameCanvas.addEventListener(\"click\", () => {\n        let audioCtx = new AudioContext();\n        let game = new Game(gameCanvas, gameCtx, audioCtx, sequenceCanvas, sequenceCtx);\n        game.run();\n    })\n\n    document.addEventListener(\"keydown\", (e) => {\n        if (e.key === \" \") {\n            let audioCtx = new AudioContext();\n            let game = new Game(gameCanvas, gameCtx, audioCtx, sequenceCanvas, sequenceCtx);\n            game.run();\n        }\n    })\n\n    let volumeSlider = document.querySelector(\"input[name='volume']\");\n    let previousVolume = volumeSlider.value;\n    let muteButton = document.querySelector(\".mute\");\n    let unmuteButton = document.querySelector(\".unmute\");\n    muteButton.addEventListener(\"click\", (e) => {\n        muteButton.className = \"mute hidden\";\n        unmuteButton.className = \"unmute\";\n        volumeSlider.value = 0; \n\n    })\n    unmuteButton.addEventListener(\"click\", (e) => {\n        unmuteButton.className = \"unmute hidden\";\n        muteButton.className = \"mute\";\n        volumeSlider.value = previousVolume;\n    })\n\n})"],"names":["constructor","canvas","ctx","this","pos","width","velocity","keys","right","pressed","left","boundArrowKeyDown","handleArrowKeyDown","bind","boundArrowKeyUp","handleArrowKeyUp","document","addEventListener","e","draw","img","Image","src","onload","clearRect","height","drawImage","update","key","audioCtx","getRandomArbitrary","x","y","appear","collision","alpha","getRandomAlpha","createGain","sound","createAudio","volumeSlider","querySelector","gainNode","connect","destination","gain","value","updateGain","Audio","crossOrigin","createMediaElementSource","fillStyle","font","fillText","checkOutOfBounds","checkCollision","bucket","playTone","play","min","max","Math","random","getRandomInt","ceil","floor","sequenceCanvas","sequenceCtx","sequence","forEach","note","push","i","setTimeout","reset","gameCanvas","gameCtx","Bucket","collectedNotes","musicNoteSequence","newNotes","animate","run","notes","newNote","Note","length","notesHolder","boundAnimate","requestId","window","requestAnimationFrame","getElementById","getContext","innerWidth","innerHeight","AudioContext","Game","previousVolume","muteButton","unmuteButton","className"],"sourceRoot":""}