{"version":3,"file":"main.js","mappings":"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","sources":["webpack://js-project/./src/scripts/bucket.js","webpack://js-project/./src/scripts/note.js","webpack://js-project/./src/scripts/musicNoteSequence.js","webpack://js-project/./src/scripts/game.js","webpack://js-project/./src/index.js"],"sourcesContent":["class Bucket {\n    constructor(width, height, ctx) {\n        this.canvasWidth = width;\n        this.canvasHeight = height;\n        this.pos = this.canvasWidth/2; \n        this.velocity = 0;\n        this.keys = {\n            right: {\n                pressed: false\n            },\n            left: {\n                pressed: false\n            }\n        }\n        this.ctx = ctx;\n\n        let boundArrowKeyDown = this.handleArrowKeyDown.bind(this);\n        let boundArrowKeyUp = this.handleArrowKeyUp.bind(this);\n        document.addEventListener(\"keydown\", (e) => {\n            boundArrowKeyDown(e);\n        })\n        document.addEventListener(\"keyup\", (e) => {\n            boundArrowKeyUp(e);\n        })\n    }\n\n    draw() {\n        let img = new Image();\n        img.src = \"src/media/book.png\";\n        img.onload = () => {\n            this.ctx.fillStyle = 'beige';\n            this.ctx.fillRect(0, 0, this.canvasWidth, this.canvasHeight);\n            this.ctx.drawImage(img, this.pos, this.canvasHeight-75, 75, 75);\n        }\n    }\n\n    update() {\n        this.draw();\n        this.velocity = 0;\n        if (this.keys.right.pressed && this.pos <= this.canvasWidth-100) this.velocity = 3;\n        else if (this.keys.left.pressed && this.pos >= 0) this.velocity = -3;\n        this.pos += this.velocity;\n    }\n\n    handleArrowKeyDown(e) {\n        switch (e.key) {\n            case \"ArrowRight\":\n                this.keys.right.pressed = true;\n                break;\n            case \"ArrowLeft\":\n                this.keys.left.pressed = true;\n                break;\n        }\n    }\n\n    handleArrowKeyUp(e) {\n        switch (e.key) {\n            case \"ArrowRight\":\n                this.keys.right.pressed = false;\n                break;\n            case \"ArrowLeft\":\n                this.keys.left.pressed = false;\n                break;\n        }\n    }\n\n}\nexport default Bucket;","class Note {\n    constructor(canvas, ctx, audioCtx) {\n\n        this.velocity = this.getRandomArbitrary(1, 3);\n        this.pos = {\n            x: this.getRandomArbitrary(10, canvas.width-10),\n            y: 0\n        };\n        this.audioCtx = audioCtx\n        this.ctx = ctx;\n        this.canvas = canvas;\n        this.appear = true;\n        this.collision = false;\n        this.alpha = this.getRandomAlpha();\n        this.createGain();\n        this.sound = this.createAudio();\n    }\n\n    createGain() {\n        const volumeSlider = document.querySelector(\"input[name='volume']\");\n        this.gainNode = this.audioCtx.createGain();\n        this.gainNode.connect(this.audioCtx.destination);\n        this.gainNode.gain.value = volumeSlider.value;\n        volumeSlider.addEventListener(\"change\", (e) => {\n            this.gainNode.gain.value = volumeSlider.value;\n        }, false);\n    }\n\n    updateGain() {\n        const volumeSlider = document.querySelector(\"input[name='volume']\");\n        this.gainNode.gain.value = volumeSlider.value;\n    }\n\n    createAudio() {\n        const sound = new Audio();\n        sound.crossOrigin = \"anonymous\";\n        switch (this.alpha) {\n            case \"A\": \n                sound.src = \"src/media/a.mp3\";\n                break;\n            case \"B\":\n                sound.src = \"src/media/b.mp3\";\n                break;\n            case \"C\":\n                sound.src = \"src/media/c.mp3\";\n                break;\n            case \"D\":\n                sound.src = \"src/media/d.mp3\";\n                break;\n            case \"E\":\n                sound.src = \"src/media/e.mp3\";\n                break;\n            case \"F\":\n                sound.src = \"src/media/f.mp3\";\n                break;\n            case \"G\":\n                sound.src = \"src/media/g.mp3\";\n                break;\n        }\n        // sound.connect()\n        const source = this.audioCtx.createMediaElementSource(sound);\n        source.connect(this.gainNode);\n        return sound;\n    }\n\n    draw() {\n        let img = new Image();\n        img.src = \"src/media/music_note.png\";\n        img.onload = () => {\n            this.ctx.fillStyle = 'red';\n            this.ctx.font = \"20px serif\";\n            this.ctx.drawImage(img, this.pos.x, this.pos.y, 50, 50);\n            this.ctx.fillText(this.alpha,this.pos.x+20, this.pos.y);\n        };\n    }\n\n    update() {\n        if (this.pos.y >= this.canvas.height-50 || this.collision) {\n            this.appear = false;\n        } else {\n            this.draw();\n            this.pos.y += this.velocity;\n        }\n    }\n\n    getRandomArbitrary(min, max) {\n        return Math.random() * (max - min) + min;\n    }\n\n    getRandomInt(min, max) {\n        min = Math.ceil(min);\n        max = Math.floor(max);\n        return Math.floor(Math.random() * (max - min) + min); // The maximum is exclusive and the minimum is inclusive\n    }\n\n    getRandomAlpha() {\n        let alpha = ['A','B','C','D','E','F','G'];\n        let num = this.getRandomInt(0,7);\n        return alpha[num];\n    }\n\n    playTone() {\n        this.updateGain();\n        this.sound.play();  \n    }\n\n    checkCollision(bucket) {\n        if (\n            this.pos.x <= bucket.pos + 37.5 &&\n            this.pos.y >= this.canvas.height - 75 &&\n            this.pos.x >= bucket.pos - 37.5\n        ) {\n            this.collision = true;\n            this.appear = false;\n        }\n        return this.collision;\n    }\n\n}\nexport default Note;","class musicNoteSequence {\n    constructor(sequenceCanvas, sequenceCtx) {\n        this.canvas = sequenceCanvas;\n        this.ctx = sequenceCtx;\n        this.sequence = [];\n        this.pos = 25;\n    }\n\n    // addNote(note) {\n    //     this.sequence.push(note);\n    // }\n\n    draw() {\n        let img = new Image();\n        img.src = \"src/media/music_note.png\";\n        img.onload = () => {\n            this.sequence.forEach((note) => {\n                this.ctx.fillStyle = \"black\";\n                this.ctx.font = \"20px serif\";\n                this.ctx.drawImage(img, this.pos, 50, 50, 50);\n                this.ctx.fillText(note.alpha, this.pos+10, 60);\n                this.pos += 50;\n            })\n        }\n    }\n\n    update(note) {\n        this.sequence.push(note);\n        this.pos = 25;\n        this.draw();\n    }\n}\n\nexport default musicNoteSequence;","import Bucket from \"./bucket\";\nimport Note from \"./note\";\nimport musicNoteSequence from \"./musicNoteSequence\";\n\nclass Game {\n    constructor(gameCanvas, gameCtx, audioCtx, sequenceCanvas, sequenceCtx) {\n        this.bucket = new Bucket(gameCanvas.width, gameCanvas.height, gameCtx);\n        this.notes = [];\n        this.collectedNotes = [];\n        this.ctx = gameCtx;\n        this.audioCtx = audioCtx;\n        this.canvas = gameCanvas;\n        this.sequence = new musicNoteSequence(sequenceCanvas, sequenceCtx);\n        this.requestId = '';\n        this.newNotes();\n        this.animate();\n    }\n\n    run() {\n        this.animate();\n    }\n\n    newNotes() {\n        for (let i = 0; i < 10; i++) {\n            // debugger\n            let newNote = new Note(this.canvas, this.ctx, this.audioCtx);\n            this.notes.push(newNote);\n        }\n        // debugger\n    }\n\n    animate() {\n        let stopAnimation = false;\n        this.bucket.update();\n\n        let notesHolder = [];\n        this.notes.forEach((note) => {\n            // note.update();\n            if (note.checkCollision(this.bucket)) {\n                note.playTone();\n                this.collectedNotes.push(note);\n                this.sequence.update(note);\n            }\n            if (note.appear) {\n                // debugger\n                notesHolder.push(note);\n            }\n            note.update();\n            if (this.collectedNotes.length === 10) {\n                // debugger\n                this.stopAnimation();\n                stopAnimation = true;\n            }\n            // if (note.appear) {\n            //     notesHolder.push(note);\n            // }\n        })\n        if (stopAnimation === true) return;\n        this.notes = notesHolder;\n        while (this.notes.length < 10) {\n            let newNote = new Note(this.canvas, this.ctx, this.audioCtx);\n            this.notes.push(newNote);\n        } \n    \n        let boundAnimate = this.animate.bind(this);\n        window.requestAnimationFrame(boundAnimate);\n    }\n\n    // addMusicNoteSequence(note) {\n    //     let img = new Image();\n    //     img.src = \"src/scripts/music_note.png\";\n    //     img.onload = () => {\n    //         this.ctx.fillStyle = 'red';\n    //         this.ctx.font = \"20px serif\";\n    //         this.ctx.drawImage(img, this.pos.x, this.pos.y, 50, 50);\n    //         this.ctx.fillText(note.alpha, note.pos.x+20, this.pos.y);\n    //     }\n    // }\n    \n\n    stopAnimation() {\n        let i = 1;\n        this.collectedNotes.forEach((note) => {\n            setTimeout(() => {\n                note.playTone();\n            },(i++)*500);\n        })\n\n    }\n}\nexport default Game;","import Game from \"./scripts/game.js\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const gameCanvas = document.getElementById('game-canvas');\n    const gameCtx = gameCanvas.getContext('2d');\n    gameCanvas.width = (window.innerWidth - window.innerWidth/2.5);\n    gameCanvas.height = (window.innerHeight - window.innerHeight/4);\n\n    const sequenceCanvas = document.getElementById('sequence-canvas');\n    const sequenceCtx = sequenceCanvas.getContext('2d');\n    sequenceCanvas.width = (window.innerWidth - window.innerWidth/2);\n    sequenceCanvas.height = (window.innerHeight/5);\n\n    gameCanvas.addEventListener(\"click\", () => {\n        let audioCtx = new AudioContext();\n        let game = new Game(gameCanvas, gameCtx, audioCtx, sequenceCanvas, sequenceCtx);\n        game.run();\n    })\n\n    let volumeSlider = document.querySelector(\"input[name='volume']\");\n    let previousVolume = volumeSlider.value;\n    let muteButton = document.querySelector(\".mute\");\n    let unmuteButton = document.querySelector(\".unmute\");\n    muteButton.addEventListener(\"click\", (e) => {\n        // previousVolume = volumeSlider.value;\n        muteButton.className = \"mute hidden\";\n        unmuteButton.className = \"unmute\";\n        volumeSlider.value = 0; \n\n    })\n    unmuteButton.addEventListener(\"click\", (e) => {\n        unmuteButton.className = \"unmute hidden\";\n        muteButton.className = \"mute\";\n        volumeSlider.value = previousVolume;\n    })\n\n})"],"names":["constructor","width","height","ctx","this","canvasWidth","canvasHeight","pos","velocity","keys","right","pressed","left","boundArrowKeyDown","handleArrowKeyDown","bind","boundArrowKeyUp","handleArrowKeyUp","document","addEventListener","e","draw","img","Image","src","onload","fillStyle","fillRect","drawImage","update","key","canvas","audioCtx","getRandomArbitrary","x","y","appear","collision","alpha","getRandomAlpha","createGain","sound","createAudio","volumeSlider","querySelector","gainNode","connect","destination","gain","value","updateGain","Audio","crossOrigin","createMediaElementSource","font","fillText","min","max","Math","random","getRandomInt","ceil","floor","playTone","play","checkCollision","bucket","sequenceCanvas","sequenceCtx","sequence","forEach","note","push","gameCanvas","gameCtx","Bucket","notes","collectedNotes","musicNoteSequence","requestId","newNotes","animate","run","i","newNote","Note","stopAnimation","notesHolder","length","boundAnimate","window","requestAnimationFrame","setTimeout","getElementById","getContext","innerWidth","innerHeight","AudioContext","Game","previousVolume","muteButton","unmuteButton","className"],"sourceRoot":""}